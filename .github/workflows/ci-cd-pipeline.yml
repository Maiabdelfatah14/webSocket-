name: CI/CD Pipeline
on:
  push:
    branches:
      - main  
    paths-ignore:
      - 'helm/**'    
      - 'argocd/**'   
      - '.github/workflows/azure-monitor.yml'

permissions:  
  id-token: write 
  contents: read
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ๐น ุชุณุฌูู ุงูุฏุฎูู ุฅูู DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # ๐น ุจูุงุก ุงูุตูุฑุฉ ูุฏูุนูุง ุฅูู DockerHub
      - name: Build and push Docker image to DockerHub
        run: |
          docker build -t maiabdelfata7/fastapi-websocket .
          docker push maiabdelfata7/fastapi-websocket

      # ๐น ุชุณุฌูู ุงูุฏุฎูู ุฅูู Azure Container Registry (ACR)
      - name: Log in to ACR
        run: echo ${{ secrets.ACR_PASSWORDTR }} | docker login myacrTR202.azurecr.io -u ${{ secrets.ACR_USERNAMETR }} --password-stdin

      # ๐น ุจูุงุก ุงูุตูุฑุฉ ูุฏูุนูุง ุฅูู ACR
      - name: Build and push Docker image to ACR
        run: |
          docker build -t myacrTR202.azurecr.io/fastapi-websocket:latest .
          docker push myacrTR202.azurecr.io/fastapi-websocket:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ๐น ุฅุนุฏุงุฏ Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      # ๐น ุชุณุฌูู ุงูุฏุฎูู ุฅูู Azure
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 

      # ๐น ุงูุชุญูู ูู ูุฌูุฏ ูุฌููุนุฉ ุงูููุงุฑุฏ ู ACR
      - name: Check if Resource Group & ACR exist
        run: |
          az group show --name myResourceGroupTR || az group create --name myResourceGroupTR --location "West Europe"
          az acr show --name myacrTR202 || az acr create --resource-group myResourceGroupTR --name myacrTR202 --sku Basic

      # ๐น ุชูููุฐ Terraform
      - name: Terraform init and apply
        working-directory: terraform
        run: |
          terraform init
          terraform apply -auto-approve -var "Subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}"

      # ๐น ูุดุฑ ุงูุชุทุจูู ุนูู Azure App Service
      - name: Deploy Web App on Azure App Service
        run: |
          az webapp config container set \
            --name my-fastapi-websocket-app \
            --resource-group myResourceGroupTR \
            --docker-custom-image-name myacrTR202.azurecr.io/fastapi-websocket:latest \
            --docker-registry-server-url https://myacrTR202.azurecr.io \
            --docker-registry-server-user ${{ secrets.ACR_USERNAMETR }} \
            --docker-registry-server-password ${{ secrets.ACR_PASSWORDTR }}

      # ๐น ุชูุนูู Health Check
      - name: Enable Health Check
        run: |
          az webapp config set \
            --resource-group myResourceGroupTR \
            --name my-fastapi-websocket-app \
            --generic-configurations "{'healthCheckPath':'/'}"

      # ๐น ุชูุนูู Application Insights
      - name: Enable Application Insights
        run: |
          az monitor app-insights component create \
          --app my-fastapi-websocket-app-insights \
          --location "West Europe" \
          --resource-group myResourceGroupTR \
          --kind web \
          --application-type web \
          --workspace "/subscriptions/2204702f-2344-4ad7-acc5-63b9daea47de/resourceGroups/myResourceGroupTR/providers/Microsoft.OperationalInsights/workspaces/my-workspaceTR"







         # ๐น ุฅูุดุงุก ูุฌููุนุฉ ุฅุฌุฑุงุกุงุช ููุชูุจููุงุช (Action Group) ุฅุฐุง ูู ุชูู ููุฌูุฏุฉ
      - name: Create Azure Monitor Action Group (if not exists)
        run: |
          if ! az monitor action-group list --resource-group myResourceGroupTR --query "[?name=='github-actions-alerts']" --output tsv | grep -q "github-actions-alerts"; then
            echo "๐ Creating Action Group: github-actions-alerts"
            az monitor action-group create \
              --resource-group myResourceGroupTR \
              --name github-actions-alerts \
              --short-name GHAlerts \
              --action email admin maiabdelfatah077@gmail.com
          else
            echo "โ Action Group github-actions-alerts already exists, skipping creation."
          fi
      
      # ๐น ุฅูุดุงุก ุงูุชูุจูู ููุฑุงูุจุฉ ุฒูู ุงูุงุณุชุฌุงุจุฉ ุฅุฐุง ูู ููู ููุฌูุฏูุง
      - name: Create Azure Monitor Alerts (if not exists)
        run: |
          if ! az monitor metrics alert list --resource-group myResourceGroupTR --query "[?name=='High Latency Alert']" --output tsv | grep -q "High Latency Alert"; then
            echo "๐ Creating High Latency Alert"
            az monitor metrics alert create \
              --name "High Latency Alert" \
              --resource-group myResourceGroupTR \
              --scopes "/subscriptions/2204702F-2344-4AD7-ACC5-63B9DAEA47DE/resourceGroups/myResourceGroupTR/providers/Microsoft.Web/sites/my-fastapi-websocket-app" \
              --condition "avg HttpResponseTime > 500" \
              --description "๐จ ูุชู ุชุดุบูู ุงูุชูุจูู ุนูุฏูุง ูุชุฌุงูุฒ ุฒูู ุงูุงุณุชุฌุงุจุฉ 500 ูููู ุซุงููุฉ" \
              --window-size 5m \
              --evaluation-frequency 1m \
              --action "/subscriptions/2204702F-2344-4AD7-ACC5-63B9DAEA47DE/resourceGroups/myResourceGroupTR/providers/Microsoft.Insights/actionGroups/github-actions-alerts"
          else
            echo "โ Alert 'High Latency Alert' already exists, skipping creation."
          fi


      # โ ุฅูุดุงุก ุงูุชูุจูู ููุดู WebSocket ุฅุฐุง ูู ููู ููุฌูุฏูุง
      - name: ุฅูุดุงุก ุชูุจูู ููุดู WebSocket (ุฅุฐุง ูู ููู ููุฌูุฏูุง)
        run: |
          if ! az monitor metrics alert list --resource-group myResourceGroupTR --query "[?name=='WebSocket Failures']" --output tsv | grep -q "WebSocket Failures"; then
            echo "๐ ุฅูุดุงุก ุชูุจูู ููุดู WebSocket"
            az monitor metrics alert create \
              --name "WebSocket Failures" \
              --resource-group myResourceGroupTR \
              --scopes "/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/myResourceGroupTR/providers/Microsoft.Web/sites/my-fastapi-websocket-app" \
              --condition "total Http5xx > 3" \
              --description "๐จ ูุชู ุชุดุบูู ุงูุชูุจูู ุนูุฏ ุญุฏูุซ ุฃูุซุฑ ูู 3 ุญุงูุงุช ูุดู WebSocket ุฎูุงู 5 ุฏูุงุฆู" \
              --window-size 5m \
              --evaluation-frequency 1m \
              --action "/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/myResourceGroupTR/providers/Microsoft.Insights/actionGroups/github-actions-alerts"
          else
            echo "โ ุงูุชูุจูู 'WebSocket Failures' ููุฌูุฏ ูุณุจููุงุ ูุชู ุชุฎุทู ุงูุฅูุดุงุก."
          fi




      # โ ุชุณุฌูู ูุฌุงุญ ุงูุนูููุฉ
      - name: Log Success Message
        run: echo "โ ุชู ุฅูุดุงุก ุงูุชูุจููุงุช ุจูุฌุงุญ ูู Azure Monitor!"

