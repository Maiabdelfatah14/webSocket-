name: CI/CD Pipeline
on:
  push:
    branches:
      - main  
    paths-ignore:
      - 'helm/**'    
      - 'argocd/**'   
      - '.github/workflows/azure-monitor.yml'

permissions:  
  id-token: write 
  contents: read
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # üîπ Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # üîπ Build & Push to DockerHub
      - name: Build and push Docker image to DockerHub
        run: |
          docker build -t maiabdelfata7/fastapi-websocket .
          docker push maiabdelfata7/fastapi-websocket

      # üîπ Log in to Azure Container Registry (ACR)
      - name: Log in to ACR
        run: echo ${{ secrets.ACR_PASSWORDTR }} | docker login myacrTR202.azurecr.io -u ${{ secrets.ACR_USERNAMETR }} --password-stdin

      # üîπ Build & Push to ACR
      - name: Build and push Docker image to ACR
        run: |
          docker build -t myacrTR202.azurecr.io/fastapi-websocket:latest .
          docker push myacrTR202.azurecr.io/fastapi-websocket:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # üîπ Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

     # üîπ Azure Login
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 

      # üîπ Ensure Resource Group & ACR exist
      - name: Check if Resource Group & ACR exist
        run: |
          az group show --name myResourceGroupTR || az group create --name myResourceGroupTR --location "West Europe"
          az acr show --name myacrTR202 || az acr create --resource-group myResourceGroupTR --name myacrTR202 --sku Basic

      # üîπ Terraform Init & Apply
      - name: Terraform init and apply
        working-directory: terraform
        run: |
          terraform init
          terraform apply -auto-approve -var "Subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}"

      # üîπ Deploy Web App on Azure App Service
      - name: Deploy Web App on Azure App Service
        run: |
          az webapp config container set \
            --name my-fastapi-websocket-app \
            --resource-group myResourceGroupTR \
            --docker-custom-image-name myacrTR202.azurecr.io/fastapi-websocket:latest \
            --docker-registry-server-url https://myacrTR202.azurecr.io \
            --docker-registry-server-user ${{ secrets.ACR_USERNAMETR }} \
            --docker-registry-server-password ${{ secrets.ACR_PASSWORDTR }}

      - name: Enable Health Check
        run: |
          az webapp config set \
            --resource-group myResourceGroupTR \
            --name my-fastapi-websocket-app \
            --generic-configurations "{'healthCheckPath':'/health'}"



    

   # üîπ Enable Workspace-based Application Insights
      - name: Enable Application Insights
        run: |
            az monitor app-insights component create \
            --app my-fastapi-websocket-app-insights \
            --location "West Europe" \
            --resource-group myResourceGroupTR \
            --kind web \
            --application-type web \
            --workspace "/subscriptions/2204702f-2344-4ad7-acc5-63b9daea47de/resourceGroups/myResourceGroupTR/providers/Microsoft.OperationalInsights/workspaces/my-workspaceTR"      

      # üîπ Get Application Insights Connection String
      - name: Get Application Insights Connection String
        run: |
          CONNECTION_STRING=$(az monitor app-insights component show \
            --app my-fastapi-websocket-app-insights \
            --resource-group myResourceGroupTR \
            --query connectionString \
            --output tsv)
          echo "CONNECTION_STRING=$CONNECTION_STRING" >> $GITHUB_ENV
      
      # üîπ Set Application Insights Configuration in Web App
      - name: Set App Settings
        run: |
          az webapp config appsettings set \
            --resource-group myResourceGroupTR \
            --name my-fastapi-websocket-app \
            --settings APPLICATIONINSIGHTS_CONNECTION_STRING=$CONNECTION_STRING
      
      # üîπ Verify Application Insights Creation
      - name: Verify Application Insights Creation
        run: |
          az monitor app-insights component show \
            --app my-fastapi-websocket-app-insights \
            --resource-group myResourceGroupTR || echo "‚ö†Ô∏è Application Insights creation failed!"
      
      # üîπ Verify App Insights Connection String Set
      - name: Verify App Insights Connection String Set
        run: |
          az webapp config appsettings list \
            --resource-group myResourceGroupTR \
            --name my-fastapi-websocket-app \
            --query "[?name=='APPLICATIONINSIGHTS_CONNECTION_STRING']" || echo "‚ö†Ô∏è App Insights connection string not found!"
      
      # ‚úÖ Log Success Message
      - name: Log Success Message
        run: echo "‚úÖ Application Insights successfully configured with Connection String!"





         # az webapp config appsettings list \
          #  --resource-group myResourceGroupTR \
           # --name my-fastapi-websocket-app \
            #--query "[?name=='APPINSIGHTS_INSTRUMENTATIONKEY']"



         # az webapp config appsettings set \
          #  --resource-group myResourceGroupTR \
           # --name my-fastapi-websocket-app \
            #--settings APPINSIGHTS_INSTRUMENTATIONKEY=b71cb53d-0a51-4bc3-86a7-a1735dd72049
