name: CI/CD Pipeline

on:
  push:
    branches:
      - main  
    paths-ignore:
      - 'helm/**'    
      - 'argocd/**'    

permissions:  
  id-token: write 
  contents: read
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ðŸ”¹ Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # ðŸ”¹ Build & Push to DockerHub
      - name: Build and push Docker image to DockerHub
        run: |
          docker build -t maiabdelfata7/fastapi-websocket .
          docker push maiabdelfata7/fastapi-websocket

      # ðŸ”¹ Log in to Azure Container Registry (ACR)
      - name: Log in to ACR
        run: echo ${{ secrets.ACR_PASSWORDTR }} | docker login myacrTR202.azurecr.io -u ${{ secrets.ACR_USERNAMETR }} --password-stdin

      # ðŸ”¹ Build & Push to ACR
      - name: Build and push Docker image to ACR
        run: |
          docker build -t myacrTR202.azurecr.io/fastapi-websocket:latest .
          docker push myacrTR202.azurecr.io/fastapi-websocket:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ðŸ”¹ Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      # ðŸ”¹ Azure Login
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # ðŸ”¹ Ensure Resource Group & ACR exist
      - name: Check if Resource Group & ACR exist
        run: |
          az group show --name myResourceGroupTR || az group create --name myResourceGroupTR --location "West Europe"
          az acr show --name myacrTR202 || az acr create --resource-group myResourceGroupTR --name myacrTR202 --sku Basic

      # ðŸ”¹ Terraform Init & Apply
      - name: Terraform init and apply
        working-directory: terraform
        run: |
          terraform init
          terraform apply -auto-approve -var "Subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}"

      # ðŸ”¹ Deploy Web App on Azure App Service
      - name: Deploy Web App on Azure App Service
        run: |
          az webapp config container set \
            --name my-fastapi-websocket-app \
            --resource-group myResourceGroupTR \
            --docker-custom-image-name myacrTR202.azurecr.io/fastapi-websocket:latest \
            --docker-registry-server-url https://myacrTR202.azurecr.io \
            --docker-registry-server-user ${{ secrets.ACR_USERNAMETR }} \
            --docker-registry-server-password ${{ secrets.ACR_PASSWORDTR }}

     # ðŸ”¹ Configure Health Check in Azure App Service
      - name: Enable Health Check in Azure App Service
        run: |
          az webapp update \
            --name my-fastapi-websocket-app \
            --resource-group myResourceGroupTR \
            --set healthCheckPath="/health"
